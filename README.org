* What is this?
These are my experiments in generative art and other things inspired by browsing
[[https://old.reddit.com/r/generative][/r/generative]].

All of the demos here are written in Rust and generate video output using [[https://nullprogram.com/blog/2017/11/03/][NetPBM
streams]], which you can watch by either piping them to a video player that supports
direct input like mpv:

#+BEGIN_SRC sh
$ cd infocus
$ cargo run --release | mpv --no-correct-pts fps=30 -
#+END_SRC

Or by piping them to a video encoder like x264 for storage:

#+BEGIN_SRC sh
$ cd infocus
$ cargo run --release | x265 --fps 30 -o output.mp4 /dev/stdin 
#+END_SRC
* Demos
** framebuffer
Not actually a demo, this is the library crate used by all the others for
drawing pixels and outputting them as NetPBM images. It supports basic
RGB colors (currently no blending) and a 2D canvas that provides a few
basic operations (rectangle filling, points and lines).

For more information, navigate into the framebuffer directory and look
at the documentation:

#+BEGIN_SRC sh
$ cd framebuffer
$ cargo doc --open
#+END_SRC
** asciiscope
asciiscope reads its input one byte at a time and produces a heatmap display of
what byte values it saw last. The grid heats up for every value it sees and
gradually cools down until the next byte comes up.

For example, when run on its own source code asciiscope outputs this:

[[./assets/asciiscope_self.gif]]

Or when run against a few hundred bytes from /dev/urandom:

[[./assets/asciiscope_random.gif]]
** infocus
infocus simulates a bunch of lenses moving around the canvas, bouncing against
the ledges and changing the colors that appear under them when they overlap.
The underlying noise is similar everywhere (basically TV snow) but what colors
show up depend upon the number of lenses over a given spot:

[[./assets/infocus.gif]]

Currently this one is difficult to view live due to lack of optimization,
recording this one up-front gives the best viewing experience.
